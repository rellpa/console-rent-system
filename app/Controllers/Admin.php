<?php

namespace App\Controllers;

use CodeIgniter\Database\Query;

class Admin extends BaseController
{



	//home
	public function index()
	{
		$data = [
			'title' => 'Admin',
			'namaresto' => $this->namaResto,
			'menu' => $this->menuModel->getMenu()
		];
		

		return view('admin/home', $data);
	}




	//resto
	public function restoTable()
	{
		$data = [
			'title' => 'Admin | FADEW console DataTable',
			'namaresto' => $this->namaResto,
			'menu' => $this->menuModel->getMenu(),
			'category' => $this->categoryModel->getKategori()
		];

		return view('admin/restoTable', $data);
	}



	//TAMBAHH
	public function newMenu()
	{
		$data = [
			'title' => 'Admin | Add New Menu Form',
			'namaresto' => $this->namaResto,
			'menu' => $this->menuModel->getMenu(),
			'validation' => \Config\Services::validation()
		];

		return view('admin/new_menu', $data);
	}

	//simpan menu
	public function saveNewMenu()
	{
		//validator
		if (!$this->validate([
			'namaMenu' => [
				'rules' => 'required|is_unique[menu.MenuName]',
				'errors' => [
					'is_unique' => 'Menu "'.$this->request->getVar('namaMenu').'" telah terdaftar'
				]
			],
			'kategori' => 'required',
			'harga' => 'required|numeric',
			'desc' => 'required',
			'rating' => 'required|numeric',
			'stok' => 'required|numeric',
			'images' => [
				'rules' => 'uploaded[images]|max_size[images,2048]|is_image[images]|mime_in[images,image/png]|max_dims[images,10000,900]',
				'errors' => [
					'uploaded' => 'Upload gambar menu',
					'max_size' => 'Ukuran gambar tidak boleh melebihi 2mb',
					'is_image' => 'Tipe file harus berupa gambar',
					'mime_in' => 'Tipe gambar harus berupa ".png"',
					'max_dims' => 'Dimensi tinggi gambar tidak boleh melebihi 900px'
				]
			]
		])) {

			return redirect()->to('/admin/newMenu')->withInput();
		}

		//data buat looping gambar
		$imageName = url_title($this->request->getVar('namaMenu'), '', true);
		$filesUploaded = count($_FILES['images']['name']);
		
		//looping gambar
		if ($this->request->getFileMultiple('images')) {
			for ($i=1; $i<=$filesUploaded; $i++) {
			foreach ($this->request->getFileMultiple('images') as $menuImages) {
					$menuImages->move('assets/img/konsol', $imageName.'_'.$i++.'.png');
				}
			}
		}

		//input/save ke DB
		$this->menuModel->save([
			'MenuName' => $this->request->getVar('namaMenu'),
			'CategoryID' => $this->request->getVar('kategori'),
			'Price' => $this->request->getVar('harga'),
			'Description' => $this->request->getVar('desc'),
			'Rating' => $this->request->getVar('rating'),
			'Stok' => $this->request->getVar('stok'),
			'Slug' => $imageName,
			'FilesUploaded' => $filesUploaded
		]);

		session()->setFlashdata('berhasilTambah', '...');

		return redirect()->to('/admin/restoTable');
	}



	//HAPUSS
	public function deleteMenu($MenuID)
	{
		//hapus gambar
		$menu = $this->menuModel->find($MenuID);
		for ($i=1; $i<=$menu['FilesUploaded']; $i++) {
			unlink('assets/img/konsol/'.$menu['Slug'].'_'.$i.'.png');
		}

		//hapus data
		$this->menuModel->delete($MenuID);
		session()->setFlashdata('berhasilHapus', '...');
		return redirect()->to('/admin/restoTable');
	}



	//EDITT
	public function editMenu($MenuID)
	{
		$data = [
			'title' => 'Admin | Edit Menu Form',
			'namaresto' => $this->namaResto,
			'menu' => $this->menuModel->getMenuByID($MenuID),
			'validation' => \Config\Services::validation()
		];

		return view('admin/edit_menu', $data);
	}

	//simpan/update menu yg diedit
	public function updateMenu($MenuID)
	{
		//data
		$oldMenu = $this->menuModel->getMenuByID($MenuID);
		$data = [
			'menu' => $this->menuModel->getMenuByID($MenuID)
		];
		
		//rule untuk validator nama menu
		if ($oldMenu['MenuName'] == $this->request->getVar('namaMenu')) {
			$rule = 'required';
		}
		else {
			$rule = 'required|is_unique[menu.MenuName]';
		}

		//validator
		if (!$this->validate([
			'namaMenu' => [
				'rules' => $rule,
				'errors' => [
					'is_unique' => 'Menu "'.$this->request->getVar('namaMenu').'" telah terdaftar'
				]
			],
			'kategori' => 'required',
			'harga' => 'required|numeric',
			'desc' => 'required',
			'rating' => 'required|numeric',
			'stok' => 'required|numeric',
			'images' => [
				'rules' => 'max_size[images,2048]|is_image[images]|mime_in[images,image/png]|max_dims[images,10000,500]',
				'errors' => [
					'max_size' => 'Ukuran gambar tidak boleh melebihi 2mb',
					'is_image' => 'Tipe file harus berupa gambar',
					'mime_in' => 'Tipe gambar harus berupa ".png"',
					'max_dims' => 'Dimensi tinggi gambar tidak boleh melebihi 500px'
				]
			]
		])) {

			return redirect()->to('/admin/editMenu/'.$this->request->getVar('id'))->withInput();
		}

		//data buat looping gambar
		$imageName = $data['menu']['Slug'];
		$filesUploadedonDb = $data['menu']['FilesUploaded']+1;
		$x = count($_FILES['images']['name'])-1;
		$filesUploaded = $x+$filesUploadedonDb;

		if ($x == 0) {

			//input/save ke DB
			$this->menuModel->save([
				'MenuID' => $MenuID,
				'MenuName' => $this->request->getVar('namaMenu'),
				'CategoryID' => $this->request->getVar('kategori'),
				'Price' => $this->request->getVar('harga'),
				'Description' => $this->request->getVar('desc'),
				'Rating' => $this->request->getVar('rating'),
				'Stok' => $this->request->getVar('stok')
			]);
			
		}
		//looping gambar
		elseif ($this->request->getFileMultiple('images')) {
			for ($i=$filesUploadedonDb; $i<=$filesUploaded; $i++) {
				foreach ($this->request->getFileMultiple('images') as $menuImages) {
					$menuImages->move('assets/img/konsol', $imageName.'_'.$i++.'.png');
				}
			}

			//input/save ke DB
			$this->menuModel->save([
				'MenuID' => $MenuID,
				'MenuName' => $this->request->getVar('namaMenu'),
				'CategoryID' => $this->request->getVar('kategori'),
				'Price' => $this->request->getVar('harga'),
				'Description' => $this->request->getVar('desc'),
				'Rating' => $this->request->getVar('rating'),
				'Stok' => $this->request->getVar('stok'),
				'FilesUploaded' => $filesUploaded
			]);
			
		}

		session()->setFlashdata('berhasilUpdate', '...');

		return redirect()->to('/admin/restoTable');
	}



	//CUSTOMER & ADMIN
	//users(customers&admin)
	public function userlist()
	{
		$users = new \Myth\Auth\Models\UserModel();
	
		
		$data= [
			'title' => 'Admin | Users DataTable',
			'namaresto' => $this->namaResto,
			'users' => $users
		];
		//$data['users'] = $users->findAll();
		$db      = \Config\Database::connect();
	    $builder = $db->table('users');
		//$builder->db->table('users');
		$builder->select('users.id as userid, username, email, concat(firstname," ", lastname) as fullname, name, gender, birthdate');
		$builder->join('auth_groups_users', 'auth_groups_users.user_id = users.id');
		$builder->join('auth_groups', 'auth_groups.id = auth_groups_users.group_id');

		$query = $builder->get();

		$data['users'] = $query->getResult();

		return view('admin/userlist', $data);
	}


///USERsDETAIL////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function detail($id=0)
	{
		$users = new \myth\Auth\Models\UserModel();
	
		$data= [
			'title' => 'Admin | Users DataTable',
			'namaresto' => $this->namaResto,
			'users' => $users
		];

		$db      = \Config\Database::connect();
	    $builder = $db->table('users');
		$builder->select('users.id as userid, username, email, concat(firstname," ", lastname) as fullname, name , gender, birthdate, alamat, no_telp');
		$builder->join('auth_groups_users', 'auth_groups_users.user_id = users.id');
		$builder->join('auth_groups', 'auth_groups.id = auth_groups_users.group_id');
		$builder->where('users.id',$id);

		$query = $builder->get();

		$data['user'] = $query->getRow();
		if(empty($data['user'])){
			return redirect() -> to('/admin/userlist');
		}

		return view('admin/detail', $data);
	}




///USERsORDER////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
public function order($id=0)
{
	$users = new \Myth\Auth\Models\UserModel();

	$db2      = \Config\Database::connect();
	$builder2 = $db2->table('users');
	$builder2->select('users.id as userid, username, email, concat(firstname," ", lastname) as fullname, name , gender, birthdate, alamat, no_telp');
	$builder2->join('auth_groups_users', 'auth_groups_users.user_id = users.id');
	$builder2->join('auth_groups', 'auth_groups.id = auth_groups_users.group_id');
	$builder2->where('users.id',$id);

	$query2 = $builder2->get();

	$users = $query2->getResultArray();



	$db      = \Config\Database::connect();
	$builder = $db->table('order');
	$builder->select('OrderID, menu.MenuID, MenuName, Stok, total_order, total_price, order_date, order_status.StatusID, order_status.StatusName');
	$builder->join('users', 'users.id = order.id');
	$builder->join('menu', 'menu.MenuID = order.MenuID');
	$builder->join('order_status', 'order_status.StatusID = order.StatusID');
	$builder->where('order.id',$id);
	$query = $builder->get();

	$order = $query->getResultArray();

	$sum = $db->table('order');
	$sum->selectSum('total_price');
	$sum->where('id', $id);
	$query2 = $sum->get();
	$sums = $query2->getResultArray();

	$data = [
		'title' => "FADEW console | Customer's Orders",
		'namaresto' => $this->namaResto,
		'menu' => $this->menuModel->getMenu(),
		'users' => $users,
		'order' => $order,
		'sums' => $sums	
	];
	// dd($order);
	return view('admin/order', $data);
}


public function updateOrderstats($OrderID)
{
	$this->orderListModel->save([
		'OrderID' => $OrderID,
		'StatusID' => $this->request->getVar('stats')
	]);

	$this->menuModel->save([
		'MenuID' => $this->request->getVar('idMenu'),
		'Stok' => $this->request->getVar('stok')
	]);

	return redirect()->to($_SERVER['HTTP_REFERER']);
}



}//<<ini closing controller Admin ini>>//



